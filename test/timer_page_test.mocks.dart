// Mocks generated by Mockito 5.4.6 from annotations
// in flexify/test/timer_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_local_notifications_platform_interface/flutter_local_notifications_platform_interface.dart'
    as _i2;
import 'package:flutter_local_notifications_platform_interface/src/types.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FlutterLocalNotificationsPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterLocalNotificationsPlatform extends _i1.Mock
    implements _i2.FlutterLocalNotificationsPlatform {
  MockFlutterLocalNotificationsPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.NotificationAppLaunchDetails?>
      getNotificationAppLaunchDetails() => (super.noSuchMethod(
            Invocation.method(
              #getNotificationAppLaunchDetails,
              [],
            ),
            returnValue: _i3.Future<_i4.NotificationAppLaunchDetails?>.value(),
          ) as _i3.Future<_i4.NotificationAppLaunchDetails?>);

  @override
  _i3.Future<void> show(
    int? id,
    String? title,
    String? body, {
    String? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [
            id,
            title,
            body,
          ],
          {#payload: payload},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShow(
    int? id,
    String? title,
    String? body,
    _i4.RepeatInterval? repeatInterval,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #periodicallyShow,
          [
            id,
            title,
            body,
            repeatInterval,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShowWithDuration(
    int? id,
    String? title,
    String? body,
    Duration? repeatDurationInterval,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #periodicallyShowWithDuration,
          [
            id,
            title,
            body,
            repeatDurationInterval,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancel(int? id) => (super.noSuchMethod(
        Invocation.method(
          #cancel,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAll() => (super.noSuchMethod(
        Invocation.method(
          #cancelAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAllPendingNotifications() => (super.noSuchMethod(
        Invocation.method(
          #cancelAllPendingNotifications,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.PendingNotificationRequest>>
      pendingNotificationRequests() => (super.noSuchMethod(
            Invocation.method(
              #pendingNotificationRequests,
              [],
            ),
            returnValue: _i3.Future<List<_i4.PendingNotificationRequest>>.value(
                <_i4.PendingNotificationRequest>[]),
          ) as _i3.Future<List<_i4.PendingNotificationRequest>>);

  @override
  _i3.Future<List<_i4.ActiveNotification>> getActiveNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveNotifications,
          [],
        ),
        returnValue: _i3.Future<List<_i4.ActiveNotification>>.value(
            <_i4.ActiveNotification>[]),
      ) as _i3.Future<List<_i4.ActiveNotification>>);
}
