name: Deploy Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to deploy"
        required: true
        type: string
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  PUB_SUMMARY_ONLY: true

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    outputs:
      version: ${{ steps.version.outputs.version }}
      flutter_version: ${{ steps.version.outputs.flutter_version }}
      msix_version: ${{ steps.version.outputs.msix_version }}
      changelog_number: ${{ steps.version.outputs.changelog_number }}
      changelog: ${{ steps.version.outputs.changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Extract version from tag
        id: version
        run: |
          # Get version from tag or workflow input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            tag_version="${{ github.event.inputs.tag }}"
            git checkout "refs/tags/$tag_version"
          else
            tag_version="${GITHUB_REF#refs/tags/}"
          fi
          echo "version=$tag_version" >> $GITHUB_OUTPUT

          # Read current version info from pubspec.yaml
          current_version=$(yq e '.version' pubspec.yaml)
          IFS='+.' read -r major minor patch build_number <<< "$current_version"
          changelog_number=$((build_number * 10 + 3))

          # Read MSIX version
          msix_version=$(yq e '.msix_config.msix_version' pubspec.yaml)

          echo "flutter_version=$current_version" >> $GITHUB_OUTPUT
          echo "msix_version=$msix_version" >> $GITHUB_OUTPUT
          echo "changelog_number=$changelog_number" >> $GITHUB_OUTPUT

      - name: Get changelog
        id: changelog
        run: |
          changelog_file="fastlane/metadata/android/en-US/changelogs/${{ steps.version.outputs.changelog_number }}.txt"

          if [ -f "$changelog_file" ]; then
            changelog=$(cat "$changelog_file")
          else
            changelog="Release ${{ steps.version.outputs.version }}"
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build-android:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Decode Android keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK (split per ABI)
        run: flutter build apk --split-per-abi

      - name: Build APK (universal)
        run: flutter build apk

      - name: Build App Bundle
        run: flutter build appbundle

      - name: Rename universal APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/flexify.apk

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            build/app/outputs/flutter-apk/app-*-release.apk
            build/app/outputs/flutter-apk/flexify.apk
            build/app/outputs/bundle/release/app-release.aab

  build-linux:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Build Linux
        run: flutter build linux

      - name: Create Linux zip
        run: |
          cd build/linux/x64/release/bundle
          zip -r flexify-linux.zip .

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: build/linux/x64/release/bundle/flexify-linux.zip

  build-windows:
    needs: prepare-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Build Windows
        run: flutter build windows

      - name: Build MSIX
        run: flutter pub run msix:create

      - name: Create Windows zip
        run: |
          Compress-Archive -Path ./build/windows/x64/runner/Release/* -DestinationPath ./flexify-windows.zip

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            build/windows/x64/runner/Release/flexify.msix
            flexify-windows.zip

  create-github-release:
    needs: [prepare-release, build-android, build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.prepare-release.outputs.version }}
          name: ${{ needs.prepare-release.outputs.version }}
          body: ${{ needs.prepare-release.outputs.changelog }}
          files: |
            android-builds/flutter-apk/app-*-release.apk
            android-builds/flutter-apk/flexify.apk
            android-builds/bundle/release/app-release.aab
            linux-builds/flexify-linux.zip
            windows-builds/flexify-windows.zip
            windows-builds/flexify.msix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-windows-store:
    needs: [prepare-release, build-windows]
    runs-on: windows-latest
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-builds

      - name: List downloaded files (debug)
        run: |
          echo "Current directory contents:"
          dir
          echo "Looking for .msix files:"
          dir *.msix /s

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Setup Microsoft Store CLI
        uses: microsoft/setup-msstore-cli@v1

      - name: Configure Microsoft Store CLI
        run: |
          msstore reconfigure --tenantId ${{ secrets.AZURE_TENANT_ID }} --clientId ${{ secrets.AZURE_CLIENT_ID }} --clientSecret ${{ secrets.CLIENT_SECRET }} --sellerId ${{ secrets.SELLER_ID }}

      - name: Publish to Microsoft Store
        run: |
          msstore publish --inputDirectory windows-builds --appId ${{ secrets.PRODUCT_ID }}

  deploy-google-play:
    needs: [prepare-release, build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-builds

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - name: Create Google Play JSON key file
        run: |
          echo '${{ secrets.GOOGLE_PLAY_JSON_KEY }}' > google-play-key.json

      - name: Deploy to Google Play
        run: |
          bundle exec fastlane supply \
            --aab bundle/release/app-release.aab \
            --json_key google-play-key.json \
            --package_name com.presley.flexify \
            --track production \
            --skip_upload_images \
            --skip_upload_screenshots
