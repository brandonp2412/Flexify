name: Version and Tag

on:
  push:
    branches: [main]
    paths-ignore:
      - "pubspec.yaml"
      - "fastlane/metadata/**"
      - "assets/changelogs/**"

env:
  PUB_SUMMARY_ONLY: true

jobs:
  version-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Calculate new version
        id: version
        run: |
          # Read current version
          current_version=$(yq e '.version' pubspec.yaml)
          IFS='+.' read -r major minor patch build_number <<< "$current_version"

          # Calculate new versions
          new_patch=$((patch + 1))
          new_build_number=$((build_number + 1))
          changelog_number=$((new_build_number * 10 + 3))
          new_flutter_version="$major.$minor.$new_patch+$new_build_number"
          new_version="$major.$minor.$new_patch"

          # Calculate MSIX version
          current_msix_version=$(yq e '.msix_config.msix_version' pubspec.yaml)
          IFS='.' read -r msix_major msix_minor msix_patch msix_zero <<< "$current_msix_version"
          new_msix_patch=$((msix_patch + 1))
          new_msix_version="$msix_major.$msix_minor.$new_msix_patch.$msix_zero"

          echo "version=$new_version" >> $GITHUB_OUTPUT
          echo "flutter_version=$new_flutter_version" >> $GITHUB_OUTPUT
          echo "msix_version=$new_msix_version" >> $GITHUB_OUTPUT
          echo "changelog_number=$changelog_number" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          changelog_file="fastlane/metadata/android/en-US/changelogs/${{ steps.version.outputs.changelog_number }}.txt"

          if [ ! -f "$changelog_file" ]; then
            mkdir -p "$(dirname "$changelog_file")"
            git --no-pager log --pretty=format:'%s' "$(git describe --tags --abbrev=0)"..HEAD | \
              awk '{print "- "$0}' > "$changelog_file"
          fi

          changelog=$(cat "$changelog_file")
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # Also create the en-AU release notes
          mkdir -p fastlane/metadata/en-AU
          echo "$changelog" > fastlane/metadata/en-AU/release_notes.txt

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Run tests and analysis
        run: |
          flutter test
          dart analyze lib
          dart format --set-exit-if-changed lib

      - name: Update versions in pubspec.yaml
        run: |
          yq e ".version |= \"${{ steps.version.outputs.flutter_version }}\"" -i pubspec.yaml
          yq e ".msix_config.msix_version |= \"${{ steps.version.outputs.msix_version }}\"" -i pubspec.yaml

      - name: Copy changelogs
        run: |
          # Create destination directory if it doesn't exist
          mkdir -p assets/changelogs

          # Process each text file in source directory
          for file in fastlane/metadata/android/en-US/changelogs/*.txt; do
            if [ -f "$file" ]; then
              # Get modification time in Unix timestamp format
              timestamp=$(stat -c "%Y" "$file")
              # Copy file with timestamp filename
              cp "$file" "assets/changelogs/$timestamp.txt"
              echo "Copied $(basename "$file") to $timestamp.txt"
            fi
          done

      - name: Commit version bump and create tag
        if: ${{ !env.ACT }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pubspec.yaml fastlane/metadata pubspec.lock assets
          git commit -m "${{ steps.version.outputs.version }} ðŸš€

          ${{ steps.changelog.outputs.changelog }}"
          git tag "${{ steps.version.outputs.version }}"
          git push origin main
          git push origin "${{ steps.version.outputs.version }}"

      - name: Trigger deploy workflow
        if: ${{ !env.ACT }}
        run: |
          gh workflow run deploy.yml --field tag="${{ steps.version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
